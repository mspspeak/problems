

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def divisible_by(a,b):
	if (a != 0) and (b != 0):
		return (a % b) == 0 
	else:
		return False

def first_even_fibbs(n):

	grandma_rabbit=1
	momma_rabbit=2
	baby_rabbit=0

	if n <= grandma_rabbit:
		return 

	if n <= momma_rabbit:
		yield momma_rabbit

	# grandma_rabbit is not even, so skip it.
	yield momma_rabbit #yield mom though.
	
	while baby_rabbit < n:
		baby_rabbit = grandma_rabbit + momma_rabbit 
		if divisible_by(baby_rabbit, 2): 
			yield baby_rabbit
		grandma_rabbit = momma_rabbit
		momma_rabbit = baby_rabbit
		

print sum(first_even_fibbs(4000000))


